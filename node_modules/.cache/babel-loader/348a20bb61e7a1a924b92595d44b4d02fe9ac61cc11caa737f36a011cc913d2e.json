{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/logo.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd5f6eaa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"releases\",\n  ref: \"releasesSection\"\n};\nconst _hoisted_2 = {\n  class: \"releases-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Latest Releases\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"release-info\"\n};\nconst _hoisted_5 = {\n  class: \"download-icon\"\n};\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.releases, release => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: release.id,\n      class: \"release-item\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, _toDisplayString(release.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(release.body), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" Replace the icon URL with your preferred download icon \"), _createElementVNode(\"img\", {\n      src: _imports_0,\n      alt: \"Download Icon\",\n      onClick: $event => $options.downloadRelease(release.assets)\n    }, null, 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["_imports_0","class","ref","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","releases","release","key","id","_hoisted_4","_toDisplayString","name","body","_hoisted_5","_createCommentVNode","src","alt","onClick","$event","$options","downloadRelease","assets"],"sources":["/home/arwin/Desktop/code/dashnote/dashnote-website/src/components/ReleasesPage.vue"],"sourcesContent":["<template>\n    <section class=\"releases\" ref=\"releasesSection\">\n        <div class=\"releases-container\">\n            <h1>Latest Releases</h1>\n            <div v-for=\"release in releases\" :key=\"release.id\" class=\"release-item\">\n                <div class=\"release-info\">\n                    <h2>{{ release.name }}</h2>\n                    <p>{{ release.body }}</p>\n                </div>\n                <div class=\"download-icon\">\n                    <!-- Replace the icon URL with your preferred download icon -->\n                    <img src=\"../assets/logo.png\" alt=\"Download Icon\" @click=\"downloadRelease(release.assets)\" />\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            releases: [], // Store releases fetched from GitHub\n        };\n    },\n    mounted() {\n        this.fetchReleases();\n    },\n    methods: {\n        async fetchReleases() {\n            try {\n                // Fetch releases from GitHub API\n                const response = await fetch('https://api.github.com/repos/Arwindpianist/Dashnote/releases');\n                const releases = await response.json();\n\n                // Update releases data\n                this.releases = releases;\n            } catch (error) {\n                console.error('Error fetching releases:', error);\n            }\n        },\n        downloadRelease(assets) {\n            // Implement your download logic here based on the selected release's assets\n            console.log('Downloading release:', assets);\n            // You may open a new window or redirect users to the download link\n            // Example: window.open(assets[0].browser_download_url, '_blank');\n        },\n        scrollToReleases() {\n            this.$refs.releasesSection.scrollIntoView({ behavior: 'smooth' });\n        },\n    },\n};\n</script>\n\n<style scoped>\n.releases {\n    background-color: #f8f8f8;\n    padding: 50px 0;\n    scroll-snap-align: start;\n}\n\n.releases-container {\n    max-width: 800px;\n    margin: 0 auto;\n}\n\nh1 {\n    text-align: center;\n    color: #1F538D;\n}\n\n.release-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px;\n    margin-bottom: 20px;\n    background-color: #fff;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    scroll-snap-align: start;\n}\n\n.release-info {\n    flex-grow: 1;\n}\n\nh2 {\n    color: #1F538D;\n}\n\np {\n    margin-top: 10px;\n    color: #555;\n}\n\n.download-icon img {\n    cursor: pointer;\n}\n</style>\n"],"mappings":";OAWyBA,UAAwB;;;EAVpCC,KAAK,EAAC,UAAU;EAACC,GAAG,EAAC;;;EACrBD,KAAK,EAAC;AAAoB;gEAC3BE,mBAAA,CAAwB,YAApB,iBAAe;;EAEVF,KAAK,EAAC;AAAc;;EAIpBA,KAAK,EAAC;AAAe;;;uBARtCG,mBAAA,CAcU,WAdVC,UAcU,GAbNF,mBAAA,CAYM,OAZNG,UAYM,GAXFC,UAAwB,G,kBACxBH,mBAAA,CASMI,SAAA,QAAAC,WAAA,CATiBC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAnBR,mBAAA,CASM;MAT4BS,GAAG,EAAED,OAAO,CAACE,EAAE;MAAEb,KAAK,EAAC;QACrDE,mBAAA,CAGM,OAHNY,UAGM,GAFFZ,mBAAA,CAA2B,YAAAa,gBAAA,CAApBJ,OAAO,CAACK,IAAI,kBACnBd,mBAAA,CAAyB,WAAAa,gBAAA,CAAnBJ,OAAO,CAACM,IAAI,iB,GAEtBf,mBAAA,CAGM,OAHNgB,UAGM,GAFFC,mBAAA,4DAA+D,EAC/DjB,mBAAA,CAA6F;MAAxFkB,GAAwB,EAAxBrB,UAAwB;MAACsB,GAAG,EAAC,eAAe;MAAEC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,CAACd,OAAO,CAACe,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}