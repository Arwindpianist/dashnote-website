{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Code source from here, thanks author\n// https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\nclass Rand {\n  constructor() {\n    this.list = [];\n  }\n  set(probability, target) {\n    this.list.push({\n      probability,\n      target,\n      a: 0,\n      b: 1\n    });\n    this.calculation();\n  }\n  calculation() {\n    let total = 0;\n    for (let i = 0; i < this.list.length; i++) {\n      total += this.list[i].probability;\n    }\n    for (let i = 0; i < this.list.length; i++) {\n      const obj = this.list[i];\n      const val = obj.probability / total;\n      obj.a = i === 0 ? 0 : this.list[i - 1].b;\n      obj.b = obj.a + val;\n    }\n  }\n  getResult() {\n    const val = Math.random();\n    for (let i = 0; i < this.list.length; i++) {\n      const obj = this.list[i];\n      if (val <= obj.b && val > obj.a) {\n        return obj.target;\n      }\n    }\n    return this.list[0].target;\n  }\n}\n;\nexport default Rand;","map":{"version":3,"names":["Rand","constructor","list","set","probability","target","push","a","b","calculation","total","i","length","obj","val","getResult","Math","random"],"sources":["/home/arwin/Desktop/code/dashnote/dashnote-website/node_modules/particles-bg-vue/src/particles-bg/utils/Rand.js"],"sourcesContent":["// Code source from here, thanks author\n// https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\nclass Rand {\n\n  constructor() {\n      this.list = [];\n  }\n\n  set(probability, target) {\n      this.list.push({\n          probability,\n          target,\n          a: 0,\n          b: 1\n      });\n\n      this.calculation();\n  }\n\n  calculation() {\n      let total = 0;\n      for (let i = 0; i < this.list.length; i++) {\n          total += this.list[i].probability;\n      }\n\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n          const val = obj.probability / total;\n\n          obj.a = i === 0 ? 0 : this.list[i - 1].b;\n          obj.b = obj.a + val;\n      }\n  }\n\n  getResult() {\n      const val = Math.random();\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n\n          if (val <= obj.b && val > obj.a) {\n              return obj.target;\n          }\n      }\n\n      return this.list[0].target;\n  }\n};\n\nexport default Rand;\n"],"mappings":";AAAA;AACA;AACA,MAAMA,IAAI,CAAC;EAETC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,IAAI,GAAG,EAAE;EAClB;EAEAC,GAAGA,CAACC,WAAW,EAAEC,MAAM,EAAE;IACrB,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC;MACXF,WAAW;MACXC,MAAM;MACNE,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACP,CAAC,CAAC;IAEF,IAAI,CAACC,WAAW,CAAC,CAAC;EACtB;EAEAA,WAAWA,CAAA,EAAG;IACV,IAAIC,KAAK,GAAG,CAAC;IACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACT,IAAI,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;MACvCD,KAAK,IAAI,IAAI,CAACR,IAAI,CAACS,CAAC,CAAC,CAACP,WAAW;IACrC;IAEA,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACT,IAAI,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,MAAME,GAAG,GAAG,IAAI,CAACX,IAAI,CAACS,CAAC,CAAC;MACxB,MAAMG,GAAG,GAAGD,GAAG,CAACT,WAAW,GAAGM,KAAK;MAEnCG,GAAG,CAACN,CAAC,GAAGI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAACT,IAAI,CAACS,CAAC,GAAG,CAAC,CAAC,CAACH,CAAC;MACxCK,GAAG,CAACL,CAAC,GAAGK,GAAG,CAACN,CAAC,GAAGO,GAAG;IACvB;EACJ;EAEAC,SAASA,CAAA,EAAG;IACR,MAAMD,GAAG,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC;IACzB,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACT,IAAI,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,MAAME,GAAG,GAAG,IAAI,CAACX,IAAI,CAACS,CAAC,CAAC;MAExB,IAAIG,GAAG,IAAID,GAAG,CAACL,CAAC,IAAIM,GAAG,GAAGD,GAAG,CAACN,CAAC,EAAE;QAC7B,OAAOM,GAAG,CAACR,MAAM;MACrB;IACJ;IAEA,OAAO,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC,CAACG,MAAM;EAC9B;AACF;AAAC;AAED,eAAeL,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}