{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/logo.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd5f6eaa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"releases\",\n  ref: \"releasesSection\"\n};\nconst _hoisted_2 = {\n  class: \"releases-container\"\n};\nconst _hoisted_3 = {\n  class: \"release-cont\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Latest Releases\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"release-info\"\n};\nconst _hoisted_6 = {\n  class: \"download-icon\"\n};\nconst _hoisted_7 = {\n  class: \"bg\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMarkdown = _resolveComponent(\"VueMarkdown\");\n  const _component_ParticlesBg = _resolveComponent(\"ParticlesBg\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.releases, release => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: release.id,\n      class: \"release-item\"\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h2\", null, _toDisplayString(release.name), 1 /* TEXT */), _createVNode(_component_VueMarkdown, {\n      class: \"text\",\n      source: release.body\n    }, null, 8 /* PROPS */, [\"source\"])])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" Replace the icon URL with your preferred download icon \"), _createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Download Icon\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.downloadRelease(_ctx.release.assets))\n  })])]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_ParticlesBg, {\n    type: \"lines\",\n    num: \"100\"\n  })])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["_imports_0","class","ref","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","releases","release","key","id","_hoisted_5","_toDisplayString","name","_createVNode","_component_VueMarkdown","source","body","_hoisted_6","_createCommentVNode","src","alt","onClick","_cache","$event","$options","downloadRelease","_ctx","assets","_hoisted_7","_component_ParticlesBg","type","num"],"sources":["/home/arwin/Desktop/code/dashnote/dashnote-website/src/components/ReleasesPage.vue"],"sourcesContent":["<template>\n    <section class=\"releases\" ref=\"releasesSection\">\n        <div class=\"releases-container\">\n            <div class=\"release-cont\">\n                <h1>Latest Releases</h1>\n                <div v-for=\"release in releases\" :key=\"release.id\" class=\"release-item\">\n                    <div class=\"release-info\">\n                        <h2>{{ release.name }}</h2>\n                        <VueMarkdown class=\"text\" :source=\"release.body\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"download-icon\">\n                <!-- Replace the icon URL with your preferred download icon -->\n                <img src=\"../assets/logo.png\" alt=\"Download Icon\" @click=\"downloadRelease(release.assets)\" />\n            </div>\n        </div>\n        <div class=\"bg\">\n            <ParticlesBg type=\"lines\" num=\"100\" />\n        </div>\n    </section>\n</template>\n\n<script>\n\nimport { ParticlesBg } from 'particles-bg-vue';\nimport VueMarkdown from 'vue-markdown-render';\n\nexport default {\n    name: 'ReleasesPage',\n    components: {\n        ParticlesBg,\n        VueMarkdown,\n    },\n    data() {\n        return {\n            releases: [], // Store releases fetched from GitHub\n        };\n    },\n    mounted() {\n        this.fetchReleases();\n    },\n    methods: {\n        async fetchReleases() {\n            try {\n                // Fetch releases from GitHub API\n                const response = await fetch('https://api.github.com/repos/Arwindpianist/Dashnote/releases');\n                const releases = await response.json();\n\n                // Update releases data\n                this.releases = releases;\n            } catch (error) {\n                console.error('Error fetching releases:', error);\n            }\n        },\n        downloadRelease(assets) {\n            console.log('Downloading release:', assets);\n            // TODO: Implement download logic\n\n        },\n        scrollToReleases() {\n            this.$refs.releasesSection.scrollIntoView({ behavior: 'smooth' });\n        },\n        navigateToReleases() {\n            this.$router.push({ name: 'releases' });\n        },\n        wrapInCodeBlock(text) {\n            return '```\\n' + text + '\\n```';\n        },\n    },\n};\n</script>\n\n<style scoped>\n.releases {\n    padding: 50px 0;\n    scroll-snap-align: start;\n}\n\n.releases-container {\n    display: flex;\n    flex-direction: row;\n    max-width: 800px;\n    width: 60vw;\n    margin: 0 auto;\n    align-items: center;\n}\n\nh1 {\n    color: #1F538D;\n}\n\n.release-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px;\n    margin-bottom: 20px;\n    scroll-snap-align: start;\n}\n\n.release-info {\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    text-align: justify;\n    line-height: 2rem;\n}\n\n.release-info h2 {\n    text-align: left;\n}\n\nh2 {\n    color: #1F538D;\n}\n\n.text {\n    margin-top: 10px;\n    padding: 0;\n    width: 30vw;\n    font-family: 'Courier New', Courier, monospace;\n    font-size: 1.2rem;\n}\n\n.download-icon img {\n    cursor: pointer;\n}\n\n.bg {\n    z-index: -1;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    filter: blur(0.2rem) brightness(0.5);\n}\n</style>\n"],"mappings":";OAcqBA,UAAwB;;;EAbhCC,KAAK,EAAC,UAAU;EAACC,GAAG,EAAC;;;EACrBD,KAAK,EAAC;AAAoB;;EACtBA,KAAK,EAAC;AAAc;gEACrBE,mBAAA,CAAwB,YAApB,iBAAe;;EAEVF,KAAK,EAAC;AAAc;;EAM5BA,KAAK,EAAC;AAAe;;EAKzBA,KAAK,EAAC;AAAI;;;;uBAhBnBG,mBAAA,CAmBU,WAnBVC,UAmBU,GAlBNF,mBAAA,CAcM,OAdNG,UAcM,GAbFH,mBAAA,CAQM,OARNI,UAQM,GAPFC,UAAwB,G,kBACxBJ,mBAAA,CAKMK,SAAA,QAAAC,WAAA,CALiBC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAnBT,mBAAA,CAKM;MAL4BU,GAAG,EAAED,OAAO,CAACE,EAAE;MAAEd,KAAK,EAAC;QACrDE,mBAAA,CAGM,OAHNa,UAGM,GAFFb,mBAAA,CAA2B,YAAAc,gBAAA,CAApBJ,OAAO,CAACK,IAAI,kBACnBC,YAAA,CAAmDC,sBAAA;MAAtCnB,KAAK,EAAC,MAAM;MAAEoB,MAAM,EAAER,OAAO,CAACS;;oCAIvDnB,mBAAA,CAGM,OAHNoB,UAGM,GAFFC,mBAAA,4DAA+D,EAC/DrB,mBAAA,CAA6F;IAAxFsB,GAAwB,EAAxBzB,UAAwB;IAAC0B,GAAG,EAAC,eAAe;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,CAACC,IAAA,CAAAnB,OAAO,CAACoB,MAAM;UAGhG9B,mBAAA,CAEM,OAFN+B,UAEM,GADFf,YAAA,CAAsCgB,sBAAA;IAAzBC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}