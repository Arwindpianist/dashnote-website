{"ast":null,"code":"import CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\nexport default {\n  name: \"BallParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      this.createMiniEmitter(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({\n      width,\n      height\n    }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const context = canvas.getContext(\"2d\");\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9), new Proton.Span(0.8, 1.3));\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 50));\n      emitter.addInitialize(new Proton.Life(5, 6));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(5, 8), new Proton.Span(30, 70), \"polar\"));\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(new Proton.Color([\"#36aaf3\", \"#fd769c\", \"#94ff22\", \"#ffa545\", \"#ffffff\"]));\n      emitter.addBehaviour(new Proton.Scale(0.7, 1));\n      emitter.addBehaviour(new Proton.Gravity(3));\n      emitter.addBehaviour(new Proton.Collision(emitter));\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      const crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"bound\");\n      emitter.addBehaviour(crossZoneBehaviour);\n      emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n      emitter.p.y = canvas.height / 2 + 50;\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n      const renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = () => {\n        context.fillStyle = getColor(this.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n      this.proton.addRenderer(renderer);\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    customDeadBehaviour(canvas) {\n      return {\n        initialize(particle) {},\n        applyBehaviour: particle => {\n          if (particle.p.y + particle.radius >= canvas.height) {\n            if (particle.radius > 9) {\n              this.miniEmitteing(particle);\n              particle.dead = true;\n            }\n          }\n        }\n      };\n    },\n    createMiniEmitter(canvas) {\n      const miniEmitter = new Proton.Emitter();\n      miniEmitter.rate = new Proton.Rate(new Proton.Span(3, 6), new Proton.Span(1, 2));\n      miniEmitter.addInitialize(new Proton.Mass(1));\n      miniEmitter.radiusInitialize = new Proton.Radius();\n      miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n      miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n      miniEmitter.addInitialize(new Proton.V(new Proton.Span(1.5, 3), new Proton.Span(0, 70, true), \"polar\"));\n      miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n      miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n      miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n      miniEmitter.addBehaviour(new Proton.Gravity(4));\n      miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n      miniEmitter.addBehaviour(new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"bound\"));\n      this.proton.addEmitter(miniEmitter);\n      this.miniEmitter = miniEmitter;\n    },\n    miniEmitteing(particle) {\n      const miniEmitter = this.miniEmitter;\n      miniEmitter.radiusInitialize.reset(particle.radius * 0.05, particle.radius * 0.2);\n      miniEmitter.colorBehaviour.reset(particle.color);\n      miniEmitter.p.x = particle.p.x;\n      miniEmitter.p.y = particle.p.y;\n      miniEmitter.emit(\"once\");\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};","map":{"version":3,"names":["CanvasComp","Proton","RAFManager","getColor","name","components","props","canvas","Object","bg","Boolean","num","Number","color","String","config","methods","canvasInited","createProton","createMiniEmitter","add","renderProton","canvasResize","width","height","crossZoneBehaviour","zone","proton","renderers","resize","canvasMouseDown","e","context","getContext","emitter","Emitter","rate","Rate","Span","addInitialize","Mass","Radius","Life","Velocity","addBehaviour","Alpha","Color","Scale","Gravity","Collision","customDeadBehaviour","CrossZone","RectZone","p","x","Math","min","max","y","emit","addEmitter","renderer","CanvasRenderer","onProtonUpdate","fillStyle","fillRect","addRenderer","initialize","particle","applyBehaviour","radius","miniEmitteing","dead","miniEmitter","radiusInitialize","V","colorBehaviour","reset","update","beforeDestroy","destroy","remove"],"sources":["/home/arwin/Desktop/code/dashnote/dashnote-website/node_modules/particles-bg-vue/src/particles-bg/particles/BallParticles.vue"],"sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"BallParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      this.createMiniEmitter(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const context = canvas.getContext(\"2d\");\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9),\n        new Proton.Span(0.8, 1.3)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 50));\n      emitter.addInitialize(new Proton.Life(5, 6));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(5, 8),\n          new Proton.Span(30, 70),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(\n        new Proton.Color([\n          \"#36aaf3\",\n          \"#fd769c\",\n          \"#94ff22\",\n          \"#ffa545\",\n          \"#ffffff\"\n        ])\n      );\n      emitter.addBehaviour(new Proton.Scale(0.7, 1));\n      emitter.addBehaviour(new Proton.Gravity(3));\n      emitter.addBehaviour(new Proton.Collision(emitter));\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n\n      emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n      emitter.p.y = canvas.height / 2 + 50;\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = () => {\n        context.fillStyle =\n          getColor(this.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n      this.proton.addRenderer(renderer);\n\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    customDeadBehaviour(canvas) {\n      return {\n        initialize(particle) {},\n        applyBehaviour: particle => {\n          if (particle.p.y + particle.radius >= canvas.height) {\n            if (particle.radius > 9) {\n              this.miniEmitteing(particle);\n              particle.dead = true;\n            }\n          }\n        }\n      };\n    },\n\n    createMiniEmitter(canvas) {\n      const miniEmitter = new Proton.Emitter();\n      miniEmitter.rate = new Proton.Rate(\n        new Proton.Span(3, 6),\n        new Proton.Span(1, 2)\n      );\n\n      miniEmitter.addInitialize(new Proton.Mass(1));\n      miniEmitter.radiusInitialize = new Proton.Radius();\n      miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n      miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n      miniEmitter.addInitialize(\n        new Proton.V(\n          new Proton.Span(1.5, 3),\n          new Proton.Span(0, 70, true),\n          \"polar\"\n        )\n      );\n\n      miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n      miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n      miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n      miniEmitter.addBehaviour(new Proton.Gravity(4));\n      miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n      miniEmitter.addBehaviour(\n        new Proton.CrossZone(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height),\n          \"bound\"\n        )\n      );\n      this.proton.addEmitter(miniEmitter);\n\n      this.miniEmitter = miniEmitter;\n    },\n    miniEmitteing(particle) {\n      const miniEmitter = this.miniEmitter;\n      miniEmitter.radiusInitialize.reset(\n        particle.radius * 0.05,\n        particle.radius * 0.2\n      );\n      miniEmitter.colorBehaviour.reset(particle.color);\n      miniEmitter.p.x = particle.p.x;\n      miniEmitter.p.y = particle.p.y;\n      miniEmitter.emit(\"once\");\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}