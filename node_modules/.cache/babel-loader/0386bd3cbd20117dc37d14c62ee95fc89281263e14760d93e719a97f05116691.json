{"ast":null,"code":"import Rand from \"./utils/Rand.js\";\nimport BallParticles from \"./particles/BallParticles.vue\";\nimport ColorParticles from \"./particles/ColorParticles.vue\";\nimport CircleParticles from \"./particles/CircleParticles.vue\";\nimport CobwebParticles from \"./particles/CobwebParticles.vue\";\nimport ThickParticles from \"./particles/ThickParticles.vue\";\nimport CustomParticles from \"./particles/CustomParticles.vue\";\nimport LinesParticles from \"./particles/LinesParticles.vue\";\nimport PolygonParticles from \"./particles/PolygonParticles.vue\";\nimport SquareParticles from \"./particles/SquareParticles.vue\";\nimport FountainParticles from \"./particles/FountainParticles.vue\";\nimport TadpoleParticles from \"./particles/TadpoleParticles.vue\";\nexport default {\n  name: \"ParticlesBg\",\n  components: {\n    ColorParticles,\n    CircleParticles,\n    CobwebParticles,\n    ThickParticles,\n    LinesParticles,\n    FountainParticles,\n    CustomParticles,\n    PolygonParticles,\n    SquareParticles,\n    TadpoleParticles,\n    BallParticles\n  },\n  props: {\n    type: {\n      type: String,\n      required: false,\n      default: \"random\"\n    },\n    num: [String, Number],\n    bg: Boolean,\n    color: String,\n    config: Object,\n    canvas: Object,\n    list: Array,\n    globalCompositeOperation: String\n  },\n  data() {\n    return {\n      particles: \"color-particles\"\n    };\n  },\n  methods: {\n    getNum() {\n      return +this.num;\n    },\n    getRandom() {\n      if (!this.random) {\n        // Code source from here, thanks author\n        // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n        this.random = new Rand();\n        this.random.set(0.25, \"color-particles\");\n        this.random.set(0.2, \"ball-particles\");\n        this.random.set(0.2, \"circle-particles\");\n        this.random.set(0.2, \"cobweb-particles\");\n        this.random.set(0.2, \"thick-particles\");\n        this.random.set(0.2, \"lines-particles\");\n        this.random.set(0.2, \"fountain-particles\");\n        this.random.set(0.2, \"polygon-particles\");\n        this.random.set(0.2, \"square-particles\");\n        this.random.set(0.2, \"tadpole-particles\");\n      }\n      return this.random.getResult();\n    },\n    getFromList() {\n      if (!this.list) return this.getRandom();\n      let item = this.list[Math.floor(Math.random() * this.list.length)];\n      item = this.transformName(item);\n      return item;\n    },\n    transformName(name) {\n      name = String(name).toLowerCase() || \"random\";\n      if (name.indexOf(\"-\") <= 0) name += \"-particles\";\n      return name;\n    },\n    setParticles() {\n      this.particles = this.transformName(this.type);\n      if (this.particles.indexOf(\"random\") === 0) {\n        this.particles = this.getRandom();\n      }\n      if (this.particles.indexOf(\"list\") === 0) {\n        this.particles = this.getFromList();\n      }\n    }\n  },\n  created() {\n    this.setParticles();\n  },\n  beforeMount() {}\n};","map":{"version":3,"names":["Rand","BallParticles","ColorParticles","CircleParticles","CobwebParticles","ThickParticles","CustomParticles","LinesParticles","PolygonParticles","SquareParticles","FountainParticles","TadpoleParticles","name","components","props","type","String","required","default","num","Number","bg","Boolean","color","config","Object","canvas","list","Array","globalCompositeOperation","data","particles","methods","getNum","getRandom","random","set","getResult","getFromList","item","Math","floor","length","transformName","toLowerCase","indexOf","setParticles","created","beforeMount"],"sources":["/home/arwin/Desktop/code/dashnote/dashnote-website/node_modules/particles-bg-vue/src/particles-bg/ParticlesBg.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"particles\"\n    :globalCompositeOperation=\"globalCompositeOperation\"\n    :num=\"getNum()\"\n    :bg=\"bg\"\n    :color=\"color\"\n    :canvas=\"canvas\"\n    :config=\"config\"\n  ></component>\n</template>\n\n<script>\nimport Rand from \"./utils/Rand.js\";\nimport BallParticles from \"./particles/BallParticles.vue\";\nimport ColorParticles from \"./particles/ColorParticles.vue\";\nimport CircleParticles from \"./particles/CircleParticles.vue\";\nimport CobwebParticles from \"./particles/CobwebParticles.vue\";\nimport ThickParticles from \"./particles/ThickParticles.vue\";\nimport CustomParticles from \"./particles/CustomParticles.vue\";\nimport LinesParticles from \"./particles/LinesParticles.vue\";\nimport PolygonParticles from \"./particles/PolygonParticles.vue\";\nimport SquareParticles from \"./particles/SquareParticles.vue\";\nimport FountainParticles from \"./particles/FountainParticles.vue\";\nimport TadpoleParticles from \"./particles/TadpoleParticles.vue\";\n\nexport default {\n  name: \"ParticlesBg\",\n  components: {\n    ColorParticles,\n    CircleParticles,\n    CobwebParticles,\n    ThickParticles,\n    LinesParticles,\n    FountainParticles,\n    CustomParticles,\n    PolygonParticles,\n    SquareParticles,\n    TadpoleParticles,\n    BallParticles\n  },\n  props: {\n    type: {\n      type: String,\n      required: false,\n      default: \"random\"\n    },\n    num: [String, Number],\n    bg: Boolean,\n    color: String,\n    config: Object,\n    canvas: Object,\n    list: Array,\n    globalCompositeOperation: String\n  },\n  data() {\n    return {\n      particles: \"color-particles\"\n    };\n  },\n  methods: {\n    getNum() {\n      return +this.num;\n    },\n    getRandom() {\n      if (!this.random) {\n        // Code source from here, thanks author\n        // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n        this.random = new Rand();\n        this.random.set(0.25, \"color-particles\");\n        this.random.set(0.2, \"ball-particles\");\n        this.random.set(0.2, \"circle-particles\");\n        this.random.set(0.2, \"cobweb-particles\");\n        this.random.set(0.2, \"thick-particles\");\n        this.random.set(0.2, \"lines-particles\");\n        this.random.set(0.2, \"fountain-particles\");\n        this.random.set(0.2, \"polygon-particles\");\n        this.random.set(0.2, \"square-particles\");\n        this.random.set(0.2, \"tadpole-particles\");\n      }\n      return this.random.getResult();\n    },\n\n    getFromList(){\n      if(!this.list) return this.getRandom();\n      let item = this.list[Math.floor(Math.random() * this.list.length)];\n      item = this.transformName(item);\n\n      return item;\n    },\n\n    transformName(name){\n      name = String(name).toLowerCase() || \"random\";\n      if (name.indexOf(\"-\") <= 0) name += \"-particles\";\n      return name;\n    },\n\n    setParticles() {\n      this.particles = this.transformName(this.type);\n      if (this.particles.indexOf(\"random\") === 0) {\n        this.particles = this.getRandom();\n      }\n\n      if (this.particles.indexOf(\"list\") === 0) {\n        this.particles = this.getFromList();\n      }\n    }\n  },\n  created() {\n    this.setParticles();\n  },\n  beforeMount() {}\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}