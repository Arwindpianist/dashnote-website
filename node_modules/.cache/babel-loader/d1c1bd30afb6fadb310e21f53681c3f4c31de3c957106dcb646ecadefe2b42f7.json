{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\", {\n    class: \"canvas\",\n    ref: \"canvasRef\",\n    style: _normalizeStyle(_ctx.styleObject),\n    onMousedown: _cache[0] || (_cache[0] = (...args) => $options.handleMouseDown && $options.handleMouseDown(...args)),\n    onMousemove: _cache[1] || (_cache[1] = (...args) => $options.handleMouseMove && $options.handleMouseMove(...args))\n  }, null, 36 /* STYLE, HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementBlock","class","ref","style","_normalizeStyle","_ctx","styleObject","onMousedown","_cache","args","$options","handleMouseDown","onMousemove","handleMouseMove"],"sources":["/home/arwin/Desktop/code/dashnote/dashnote-website/node_modules/particles-bg-vue/src/particles-bg/particles/CanvasComp.vue"],"sourcesContent":["<template>\n  <canvas\n    class=\"canvas\"\n    ref=\"canvasRef\"\n    v-bind:style=\"styleObject\"\n    v-on:mousedown=\"handleMouseDown\"\n    v-on:mousemove=\"handleMouseMove\"\n  />\n</template>\n\n<script>\nexport default {\n  name: \"CanvasComp\",\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    globalCompositeOperation: String\n  },\n  data: function() {\n    return {\n      styleObject: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    };\n  },\n  methods: {\n    initCanvas: function() {\n      const canvas = this.$refs.canvasRef;\n      const width = canvas.clientWidth;\n      const height = canvas.clientHeight;\n      canvas.width = width;\n      canvas.height = height;\n\n      if (this.globalCompositeOperation) {\n        const context = canvas.getContext(\"2d\");\n        context.globalCompositeOperation = this.globalCompositeOperation;\n      }\n\n      this.$emit(\"canvasInited\", canvas);\n    },\n    resize: function() {\n      const canvas = this.$refs.canvasRef;\n      const width = canvas.clientWidth;\n      const height = canvas.clientHeight;\n      canvas.width = width;\n      canvas.height = height;\n      this.$emit(\"canvasResize\", { width, height });\n    },\n\n    handleMouseDown: function(e) {\n      this.$emit(\"canvasMouseDown\", e);\n    },\n\n    handleMouseMove: function(e) {\n      this.$emit(\"canvasMouseMove\", e);\n    }\n  },\n  created() {\n    if (this.bg) {\n      this.styleObject = Object.assign(this.styleObject, {\n        position: \"absolute\",\n        zIndex: -1,\n        top: 0,\n        left: 0\n      });\n    }\n\n    if(this.canvas){\n      this.styleObject = Object.assign(this.styleObject, this.canvas);\n    }\n  },\n  mounted() {\n    this.initCanvas();\n    this.resize = this.resize.bind(this);\n    window.addEventListener(\"resize\", this.resize);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.canvas {\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAME;IALAC,KAAK,EAAC,QAAQ;IACdC,GAAG,EAAC,WAAW;IACRC,KAAK,EAAAC,eAAA,CAAEC,IAAA,CAAAC,WAAW;IACpBC,WAAS,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;IAC1BG,WAAS,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,eAAA,IAAAH,QAAA,CAAAG,eAAA,IAAAJ,IAAA,CAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}