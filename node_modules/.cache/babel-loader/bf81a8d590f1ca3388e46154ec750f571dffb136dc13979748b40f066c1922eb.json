{"ast":null,"code":"import CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nconst colors = [\"#529B88\", \"#CDD180\", \"#FFFA32\", \"#FB6255\", \"#FB4A53\", \"#FF4E50\", \"#F9D423\"];\nexport default {\n  name: \"CustomParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    globalCompositeOperation: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({\n      width,\n      height\n    }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n    getCompositeOperation() {\n      const globalCompositeOperation = this.globalCompositeOperation || this.operation || \"source-over\";\n      return globalCompositeOperation;\n    },\n    getProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      if (Array.isArray(val)) {\n        return new Proton.Span(val[0], val[1]);\n      } else {\n        return val;\n      }\n    },\n    getArrProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      if (!val) return null;\n      if (Array.isArray(val)) {\n        return val;\n      } else {\n        return [val, val];\n      }\n    },\n    createProton(canvas, width, height) {\n      const num = this.getProp(\"num\", [5, 8]);\n      const rps = this.getProp(\"rps\", [0.1, 0.2]);\n      const mass = this.getProp(\"mass\", 1);\n      const radius = this.getProp(\"radius\", [10, 30]);\n      const life = this.getProp(\"life\", [2, 3]);\n      const body = this.getProp(\"body\");\n      const position = this.getProp(\"position\");\n      const v = this.getProp(\"v\", [2, 3]);\n      const tha = this.getProp(\"tha\", [-15, 15]);\n      const alpha = this.getArrProp(\"alpha\");\n      const scale = this.getArrProp(\"scale\");\n      const color = this.getArrProp(\"color\");\n      const cross = this.getProp(\"cross\", \"dead\");\n      const random = this.getProp(\"random\");\n      const rotate = this.getArrProp(\"rotate\");\n      const g = this.getProp(\"g\");\n      const f = this.getArrProp(\"f\");\n      const emitterV = this.getProp(\"emitter\");\n      this.proton = new Proton();\n      let emitter;\n      if (emitterV === \"follow\") {\n        emitter = new Proton.FollowEmitter();\n      } else {\n        emitter = new Proton.Emitter();\n      }\n      emitter.rate = new Proton.Rate(num, rps);\n      emitter.addInitialize(new Proton.Mass(mass));\n      emitter.addInitialize(new Proton.Radius(radius));\n      emitter.addInitialize(new Proton.Life(life));\n      emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n      if (body) emitter.addInitialize(new Proton.Body(body));\n      let pos;\n      if (position === \"all\" || position === \"screen\") {\n        pos = new Proton.Position(new Proton.RectZone(0, 0, canvas.width, canvas.height));\n      } else if (typeof position === \"object\") {\n        pos = new Proton.Position(new Proton.RectZone(position.x, position.y, position.width, position.height));\n      } else {\n        emitter.p.x = canvas.width / 2;\n        emitter.p.y = canvas.height / 2;\n      }\n      emitter.addInitialize(pos);\n\n      /// behaviour\n      const alphaB = alpha ? new Proton.Alpha(alpha[0], alpha[1]) : new Proton.Alpha(0, 1);\n      const scaleB = scale ? new Proton.Scale(scale[0], scale[1]) : new Proton.Scale(1, 0.2);\n      const colorB = color ? new Proton.Color(color[0], color[1]) : new Proton.Color(colors);\n      emitter.addBehaviour(alphaB);\n      emitter.addBehaviour(scaleB);\n      if (!body) emitter.addBehaviour(colorB);\n      if (rotate) {\n        if (rotate[0] === true || rotate[0] === \"rotate\") {\n          emitter.addBehaviour(new Proton.Rotate());\n        } else {\n          emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n        }\n      }\n      const zone = new Proton.RectZone(0, 0, canvas.width, canvas.height);\n      const crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n      emitter.addBehaviour(crossZoneBehaviour);\n      random && emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n      g && emitter.addBehaviour(new Proton.G(g));\n      f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n      this.emitter = emitter;\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n      const onUpdate = this.getProp(\"onUpdate\");\n      if (onUpdate) {\n        renderer.onProtonUpdate = () => {\n          onUpdate(context, width, height);\n        };\n      }\n      const onParticleCreated = this.getProp(\"onParticleCreated\");\n      if (onParticleCreated) {\n        renderer.onParticleCreated = particle => {\n          onParticleCreated(context, particle);\n        };\n      }\n      const onParticleUpdate = this.getProp(\"onParticleUpdate\");\n      if (onParticleUpdate) {\n        renderer.onParticleUpdate = particle => {\n          onParticleUpdate(context, particle);\n        };\n      }\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};","map":{"version":3,"names":["CanvasComp","Proton","RAFManager","colors","name","components","props","canvas","Object","bg","Boolean","num","Number","color","String","globalCompositeOperation","config","methods","canvasInited","createProton","add","renderProton","canvasResize","width","height","crossZoneBehaviour","zone","proton","renderers","resize","canvasMouseDown","e","getCompositeOperation","operation","getProp","key","defaultVal","val","Array","isArray","Span","getArrProp","rps","mass","radius","life","body","position","v","tha","alpha","scale","cross","random","rotate","g","f","emitterV","emitter","FollowEmitter","Emitter","rate","Rate","addInitialize","Mass","Radius","Life","Velocity","Body","pos","Position","RectZone","x","y","p","alphaB","Alpha","scaleB","Scale","colorB","Color","addBehaviour","Rotate","CrossZone","RandomDrift","G","F","emit","addEmitter","renderer","createRenderer","addRenderer","context","getContext","CanvasRenderer","onUpdate","onProtonUpdate","onParticleCreated","particle","onParticleUpdate","update","beforeDestroy","destroy","remove"],"sources":["/home/arwin/Desktop/code/dashnote/dashnote-website/node_modules/particles-bg-vue/src/particles-bg/particles/CustomParticles.vue"],"sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"getCompositeOperation()\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"CustomParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    globalCompositeOperation: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    getCompositeOperation() {\n      const globalCompositeOperation =\n        this.globalCompositeOperation || this.operation || \"source-over\";\n      return globalCompositeOperation;\n    },\n\n    getProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      \n      if (Array.isArray(val)) {\n        return new Proton.Span(val[0], val[1]);\n      } else {\n        return val;\n      }\n    },\n\n    getArrProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      if (!val) return null;\n\n      if (Array.isArray(val)) {\n        return val;\n      } else {\n        return [val, val];\n      }\n    },\n\n    createProton(canvas, width, height) {\n      const num = this.getProp(\"num\", [5, 8]);\n      const rps = this.getProp(\"rps\", [0.1, 0.2]);\n      const mass = this.getProp(\"mass\", 1);\n      const radius = this.getProp(\"radius\", [10, 30]);\n      const life = this.getProp(\"life\", [2, 3]);\n      const body = this.getProp(\"body\");\n      const position = this.getProp(\"position\");\n      const v = this.getProp(\"v\", [2, 3]);\n      const tha = this.getProp(\"tha\", [-15, 15]);\n      const alpha = this.getArrProp(\"alpha\");\n      const scale = this.getArrProp(\"scale\");\n      const color = this.getArrProp(\"color\");\n      const cross = this.getProp(\"cross\", \"dead\");\n      const random = this.getProp(\"random\");\n      const rotate = this.getArrProp(\"rotate\");\n      const g = this.getProp(\"g\");\n      const f = this.getArrProp(\"f\");\n      const emitterV = this.getProp(\"emitter\");\n\n      this.proton = new Proton();\n      let emitter;\n      if (emitterV === \"follow\") {\n        emitter = new Proton.FollowEmitter();\n      } else {\n        emitter = new Proton.Emitter();\n      }\n      emitter.rate = new Proton.Rate(num, rps);\n\n      emitter.addInitialize(new Proton.Mass(mass));\n      emitter.addInitialize(new Proton.Radius(radius));\n      emitter.addInitialize(new Proton.Life(life));\n      emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n      if (body) emitter.addInitialize(new Proton.Body(body));\n\n      let pos;\n      if (position === \"all\" || position === \"screen\") {\n        pos = new Proton.Position(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height)\n        );\n      } else if (typeof position === \"object\") {\n        pos = new Proton.Position(\n          new Proton.RectZone(\n            position.x,\n            position.y,\n            position.width,\n            position.height\n          )\n        );\n      } else {\n        emitter.p.x = canvas.width / 2;\n        emitter.p.y = canvas.height / 2;\n      }\n\n      emitter.addInitialize(pos);\n\n      /// behaviour\n      const alphaB = alpha\n        ? new Proton.Alpha(alpha[0], alpha[1])\n        : new Proton.Alpha(0, 1);\n      const scaleB = scale\n        ? new Proton.Scale(scale[0], scale[1])\n        : new Proton.Scale(1, 0.2);\n      const colorB = color\n        ? new Proton.Color(color[0], color[1])\n        : new Proton.Color(colors);\n\n      emitter.addBehaviour(alphaB);\n      emitter.addBehaviour(scaleB);\n      if (!body) emitter.addBehaviour(colorB);\n\n      if (rotate) {\n        if (rotate[0] === true || rotate[0] === \"rotate\") {\n          emitter.addBehaviour(new Proton.Rotate());\n        } else {\n          emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n        }\n      }\n\n      const zone = new Proton.RectZone(0, 0, canvas.width, canvas.height);\n      const crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n      emitter.addBehaviour(crossZoneBehaviour);\n\n      random &&\n        emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n      g && emitter.addBehaviour(new Proton.G(g));\n      f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n\n      this.emitter = emitter;\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n\n    createRenderer(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      const onUpdate = this.getProp(\"onUpdate\");\n      if (onUpdate) {\n        renderer.onProtonUpdate = () => {\n          onUpdate(context, width, height);\n        };\n      }\n\n      const onParticleCreated = this.getProp(\"onParticleCreated\");\n      if (onParticleCreated) {\n        renderer.onParticleCreated = particle => {\n          onParticleCreated(context, particle);\n        };\n      }\n\n      const onParticleUpdate = this.getProp(\"onParticleUpdate\");\n      if (onParticleUpdate) {\n        renderer.onParticleUpdate = particle => {\n          onParticleUpdate(context, particle);\n        };\n      }\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}