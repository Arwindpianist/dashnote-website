{"ast":null,"code":"import CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\nexport default {\n  name: \"ThickParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.canvasDom = canvas;\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({\n      width,\n      height\n    }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 150);\n\n      // Initialize\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(8));\n      emitter.addInitialize(new Proton.V(new Proton.Span(0.1, 0.5), new Proton.Span(0, 360), \"polar\"));\n      emitter.addInitialize(new Proton.Position(new Proton.CircleZone(canvas.width / 2, canvas.height / 2, 100)));\n\n      // Behaviour\n      const crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"cross\");\n      emitter.addBehaviour(crossZoneBehaviour);\n      this.repulsion = new Proton.Repulsion({\n        x: canvas.width / 2,\n        y: canvas.height / 2 - 100\n      }, 3, 300);\n      this.attraction = new Proton.Attraction({\n        x: canvas.width / 2,\n        y: canvas.height / 2\n      }, 3, 200);\n      emitter.addBehaviour(this.attraction, this.repulsion);\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(new Proton.RandomDrift(20, 15, 0.15));\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = () => {\n        this.hue += 1;\n        context.fillStyle = getColor(this.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n      renderer.onParticleCreated = particle => {\n        particle.data.begin = Proton.MathUtil.randomAToB(1, 120);\n        particle.data.tha = Proton.MathUtil.randomAToB(0, Math.PI * 2);\n      };\n      renderer.onParticleUpdate = particle => {\n        const hue = particle.data.begin + this.hue;\n        particle.color = this.colorTemplate.replace(\"hue\", hue % 360);\n        const ratio = 3 / 4;\n        const radius = particle.radius * (1 - ratio) * Math.cos(particle.data.tha += 0.01) + particle.radius * ratio;\n        context.beginPath();\n        context.fillStyle = particle.color;\n        context.arc(particle.p.x, particle.p.y, radius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fill();\n      };\n      return renderer;\n    },\n    renderProton() {\n      const canvas = this.canvasDom;\n      this.proton.update();\n      if (this.index % 200 === 0) {\n        this.attraction.targetPosition.x = Math.random() * canvas.width;\n        this.attraction.targetPosition.y = Math.random() * canvas.height;\n        this.repulsion.targetPosition.x = Math.random() * canvas.width;\n        this.repulsion.targetPosition.y = Math.random() * canvas.height;\n      }\n      this.index++;\n    }\n  },\n  created() {\n    this.hue = 0;\n    this.index = 0;\n    this.colorTemplate = `hsla(hue,80%,50%, 0.75)`;\n    this.renderProton = this.renderProton.bind(this);\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};","map":{"version":3,"names":["CanvasComp","Proton","RAFManager","getColor","name","components","props","canvas","Object","bg","Boolean","color","String","num","Number","config","methods","canvasInited","canvasDom","createProton","add","renderProton","style","backgroundColor","canvasResize","width","height","crossZoneBehaviour","zone","proton","renderers","resize","canvasMouseDown","e","emitter","Emitter","damping","rate","Rate","addInitialize","Mass","Radius","V","Span","Position","CircleZone","CrossZone","RectZone","addBehaviour","repulsion","Repulsion","x","y","attraction","Attraction","Color","RandomDrift","emit","addEmitter","addRenderer","createRenderer","context","getContext","renderer","CanvasRenderer","onProtonUpdate","hue","fillStyle","fillRect","onParticleCreated","particle","data","begin","MathUtil","randomAToB","tha","Math","PI","onParticleUpdate","colorTemplate","replace","ratio","radius","cos","beginPath","arc","p","closePath","fill","update","index","targetPosition","random","created","bind","beforeDestroy","destroy","remove"],"sources":["/home/arwin/Desktop/code/dashnote/dashnote-website/node_modules/particles-bg-vue/src/particles-bg/particles/ThickParticles.vue"],"sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"ThickParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.canvasDom = canvas;\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 150);\n\n      // Initialize\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(8));\n      emitter.addInitialize(\n        new Proton.V(\n          new Proton.Span(0.1, 0.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(\n          new Proton.CircleZone(canvas.width / 2, canvas.height / 2, 100)\n        )\n      );\n\n      // Behaviour\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"cross\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n      this.repulsion = new Proton.Repulsion(\n        {\n          x: canvas.width / 2,\n          y: canvas.height / 2 - 100\n        },\n        3,\n        300\n      );\n\n      this.attraction = new Proton.Attraction(\n        {\n          x: canvas.width / 2,\n          y: canvas.height / 2\n        },\n        3,\n        200\n      );\n      emitter.addBehaviour(this.attraction, this.repulsion);\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(new Proton.RandomDrift(20, 15, 0.15));\n\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      renderer.onProtonUpdate = () => {\n        this.hue += 1;\n        context.fillStyle = getColor(this.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.begin = Proton.MathUtil.randomAToB(1, 120);\n        particle.data.tha = Proton.MathUtil.randomAToB(0, Math.PI * 2);\n      };\n\n      renderer.onParticleUpdate = particle => {\n        const hue = particle.data.begin + this.hue;\n        particle.color = this.colorTemplate.replace(\"hue\", hue % 360);\n\n        const ratio = 3 / 4;\n        const radius =\n          particle.radius *\n            (1 - ratio) *\n            Math.cos((particle.data.tha += 0.01)) +\n          particle.radius * ratio;\n\n        context.beginPath();\n        context.fillStyle = particle.color;\n        context.arc(particle.p.x, particle.p.y, radius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fill();\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      const canvas = this.canvasDom;\n      this.proton.update();\n      if (this.index % 200 === 0) {\n        this.attraction.targetPosition.x = Math.random() * canvas.width;\n        this.attraction.targetPosition.y = Math.random() * canvas.height;\n\n        this.repulsion.targetPosition.x = Math.random() * canvas.width;\n        this.repulsion.targetPosition.y = Math.random() * canvas.height;\n      }\n\n      this.index++;\n    }\n  },\n  created() {\n    this.hue = 0;\n    this.index = 0;\n    this.colorTemplate = `hsla(hue,80%,50%, 0.75)`;\n    this.renderProton = this.renderProton.bind(this);\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}