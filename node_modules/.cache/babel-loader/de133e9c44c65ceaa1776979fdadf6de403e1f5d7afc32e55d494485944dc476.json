{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/dashnote.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-109177d0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"main\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"main-content\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Dashnote Preview\"\n}), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"content-section section\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Welcome to DashNote\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"DashNote is a Python note-taking app designed to simplify your note-taking experience.\")])], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"bg\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"main-content\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"content-section section2\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"feat\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Features:\"), /*#__PURE__*/_createElementVNode(\"p\", null, \" DashNote is a simple note-taking application built using customtkinter. It allows you to create, save, and update notes with a user-friendly interface. \")]), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"feat-li\"\n}, [/*#__PURE__*/_createElementVNode(\"ul\", null, [/*#__PURE__*/_createElementVNode(\"li\", null, \"Dark theme for comfortable usage.\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Create new notes with a specified name.\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Save notes with automatic storage in a \\\"saved-notes\\\" folder.\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Update existing notes with ease.\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Left panel displays the history of saved notes.\")])])], -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"bg2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ParticlesBg = _resolveComponent(\"ParticlesBg\");\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.offsets, (offset, index) => {\n    return _openBlock(), _createElementBlock(\"section\", {\n      key: index,\n      class: _normalizeClass([{\n        active: $data.activeSection === index\n      }, \"scroll-section\"])\n    }, [index === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_ParticlesBg, {\n      type: \"lines\",\n      num: \"100\"\n    })])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_ParticlesBg, {\n      type: \"lines\",\n      num: \"150\"\n    })])]))], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","alt","_createElementBlock","_Fragment","_renderList","$data","offsets","offset","index","key","_normalizeClass","active","activeSection","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_ParticlesBg","type","num","_hoisted_4","_hoisted_5","_hoisted_6"],"sources":["/home/arwin/Desktop/code/dashnote/dashnote-website/src/components/MainPage.vue"],"sourcesContent":["<template>\n    <div>\n        <section v-for=\"(offset, index) in offsets\" :key=\"index\" :class=\"{ active: activeSection === index }\"\n            class=\"scroll-section\">\n            <div v-if=\"index === 0\" class=\"main\">\n                <div class=\"main-content\">\n                    <img src=\"../assets/dashnote.png\" alt=\"Dashnote Preview\">\n                    <div class=\"content-section section\">\n                        <h1>Welcome to DashNote</h1>\n                        <p>DashNote is a Python note-taking app designed to simplify your note-taking experience.</p>\n                    </div>\n                </div>\n                <div class=\"bg\">\n                    <ParticlesBg type=\"lines\" num=\"100\" />\n                </div>\n            </div>\n\n            <div v-else class=\"main-content\">\n                <div class=\"content-section section2\">\n                    <div class=\"feat\">\n                        <h1>Features:</h1>\n                        <p>\n                            DashNote is a simple note-taking application built using customtkinter. It allows you to create,\n                            save, and update notes with a user-friendly interface.\n                        </p>\n                    </div>\n                    <div class=\"feat-li\">\n                        <ul>\n                            <li>Dark theme for comfortable usage.</li>\n                            <li>Create new notes with a specified name.</li>\n                            <li>Save notes with automatic storage in a \"saved-notes\" folder.</li>\n                            <li>Update existing notes with ease.</li>\n                            <li>Left panel displays the history of saved notes.</li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"bg2\">\n                    <ParticlesBg type=\"lines\" num=\"150\" />\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n  \n<script>\nimport { ParticlesBg } from 'particles-bg-vue';\n\nexport default {\n    name: 'MainPage',\n    components: {\n        ParticlesBg,\n    },\n    data() {\n        return {\n            inMove: false,\n            inMoveDelay: 400,\n            activeSection: 0,\n            offsets: [],\n            touchStartY: 0,\n        };\n    },\n    methods: {\n        calculateSectionOffsets() {\n            const sections = document.getElementsByClassName('scroll-section');\n            this.offsets = Array.from(sections).map((section) => section.offsetTop);\n        },\n        moveDown() {\n            this.inMove = true;\n            this.activeSection--;\n\n            if (this.activeSection < 0) this.activeSection = this.offsets.length - 1;\n\n            this.scrollToSection(this.activeSection, true);\n        },\n        moveUp() {\n            this.inMove = true;\n            this.activeSection++;\n\n            if (this.activeSection > this.offsets.length - 1) this.activeSection = 0;\n\n            this.scrollToSection(this.activeSection, true);\n        },\n        scrollToSection(id, force = false) {\n            if (this.inMove && !force) return false;\n\n            this.activeSection = id;\n            this.inMove = true;\n\n            const targetPosition = id * window.innerHeight;\n            window.scrollTo({\n                top: targetPosition,\n                behavior: 'smooth',\n            });\n\n            setTimeout(() => {\n                this.inMove = false;\n            }, this.inMoveDelay);\n        },\n        touchStart(e) {\n            e.preventDefault();\n\n            this.touchStartY = e.touches[0].clientY;\n        },\n        touchMove(e) {\n            if (this.inMove) return false;\n            e.preventDefault();\n\n            const currentY = e.touches[0].clientY;\n\n            if (this.touchStartY < currentY) {\n                this.moveDown();\n            } else {\n                this.moveUp();\n            }\n\n            this.touchStartY = 0;\n            return false;\n        },\n    },\n    mounted() {\n        this.calculateSectionOffsets();\n\n        window.addEventListener('DOMMouseScroll', this.handleMouseWheelDOM);\n        window.addEventListener('mousewheel', this.handleMouseWheel, { passive: false });\n\n        window.addEventListener('touchstart', this.touchStart, { passive: false });\n        window.addEventListener('touchmove', this.touchMove, { passive: false });\n    },\n    beforeUnmount() {\n        window.removeEventListener('DOMMouseScroll', this.handleMouseWheelDOM);\n        window.removeEventListener('mousewheel', this.handleMouseWheel, { passive: false });\n\n        window.removeEventListener('touchstart', this.touchStart);\n        window.removeEventListener('touchmove', this.touchMove);\n    },\n};\n</script>\n  \n<style scoped>\n/* Add your styling for scroll-sections here */\n</style>\n  "],"mappings":";OAMyBA,UAA4B;;;;EAFjBC,KAAK,EAAC;;gEAC1BC,mBAAA,CAMM;EANDD,KAAK,EAAC;AAAc,I,aACrBC,mBAAA,CAAyD;EAApDC,GAA4B,EAA5BH,UAA4B;EAACI,GAAG,EAAC;iBACtCF,mBAAA,CAGM;EAHDD,KAAK,EAAC;AAAyB,I,aAChCC,mBAAA,CAA4B,YAAxB,qBAAmB,G,aACvBA,mBAAA,CAA6F,WAA1F,wFAAsF,E;;EAG5FD,KAAK,EAAC;AAAI;;;EAKPA,KAAK,EAAC;;gEACdC,mBAAA,CAiBM;EAjBDD,KAAK,EAAC;AAA0B,I,aACjCC,mBAAA,CAMM;EANDD,KAAK,EAAC;AAAM,I,aACbC,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAGI,WAHD,2JAGH,E,gBAEJA,mBAAA,CAQM;EARDD,KAAK,EAAC;AAAS,I,aAChBC,mBAAA,CAMK,a,aALDA,mBAAA,CAA0C,YAAtC,mCAAiC,G,aACrCA,mBAAA,CAAgD,YAA5C,yCAAuC,G,aAC3CA,mBAAA,CAAqE,YAAjE,gEAA4D,G,aAChEA,mBAAA,CAAyC,YAArC,kCAAgC,G,aACpCA,mBAAA,CAAwD,YAApD,iDAA+C,E;;EAI1DD,KAAK,EAAC;AAAK;;;uBAnC5BI,mBAAA,CAwCM,e,kBAvCFA,mBAAA,CAsCUC,SAAA,QAAAC,WAAA,CAtCyBC,KAAA,CAAAC,OAAO,GAAzBC,MAAM,EAAEC,KAAK;yBAA9BN,mBAAA,CAsCU;MAtCmCO,GAAG,EAAED,KAAK;MAAGV,KAAK,EAAAY,eAAA;QAAAC,MAAA,EAAYN,KAAA,CAAAO,aAAa,KAAKJ;MAAK,GACxF,gBAAgB;QACXA,KAAK,U,cAAhBN,mBAAA,CAWM,OAXNW,UAWM,GAVFC,UAMM,EACNf,mBAAA,CAEM,OAFNgB,UAEM,GADFC,YAAA,CAAsCC,sBAAA;MAAzBC,IAAI,EAAC,OAAO;MAACC,GAAG,EAAC;6BAItCjB,mBAAA,CAsBM,OAtBNkB,UAsBM,GArBFC,UAiBM,EACNtB,mBAAA,CAEM,OAFNuB,UAEM,GADFN,YAAA,CAAsCC,sBAAA;MAAzBC,IAAI,EAAC,OAAO;MAACC,GAAG,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}